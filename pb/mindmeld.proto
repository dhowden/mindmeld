syntax = "proto3";

package mindmeld;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/dhowden/mindmeld/pb";

message Header {
   // Token to use to access the service.
   string token = 1;
}

// ControlService controls routing.
service ControlService {
   // Create a service, and wait for requests to come through via the stream.
   // The caller will then receive a response message for each client that wants
   // to connect to the service.
   rpc CreateService(CreateServiceRequest) returns (stream CreateServiceResponse);

   // Forward to remote service.
   rpc ForwardToService(ForwardToServiceRequest) returns (ForwardToServiceResponse);

   // List services.
   rpc ListServices(ListServicesRequest) returns (ListServicesResponse);
}

message ListServicesRequest {}

message ListServicesResponse {
   repeated Service services = 1;
}

message Service {
   // Name of the service.
   string name = 1;

   // Time the service was created.  Output only.
   google.protobuf.Timestamp create_time = 2;
}

// Create a service hosted by this member.
message CreateServiceRequest {
   // Name of the service.
   string name = 1;
}

message CreateServiceResponse {
   // Token to use when using this service.
   string token = 1;

   // Dial address for the proxy.
   string dial_addr = 2;
}

// Forward a service from this member to another.
message ForwardToServiceRequest {
  // Name of the service.
  string name = 1;
}

message ForwardToServiceResponse{
   // Token to use when using this service.
   string token = 1;
   
   // Dial address for the proxy.
   string dial_addr = 2;
}

// Proxy requests through gRPC.
// This is particularly useful for hosting the router in CloudRun.
service ProxyService {
   rpc ProxyConnection(stream Payload) returns (stream Payload);
}

message Payload {
   oneof payload {
      Header header = 1;
      bytes data = 2;
   }
}